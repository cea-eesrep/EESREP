# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    strategy:
      matrix:
        os: [windows-latest, ubuntu-22.04, ubuntu-20.04]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11"] # , "3.12"]
        exclude:
          - os: ubuntu-22.04
            python-version: "3.6"
        # version: [10, 12, 14]
    runs-on: ${{ matrix.os }}
      # fail-fast: false

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest mip pandas numpy matplotlib 
        python -m pip install .[test]
        python -m pip install coverage pytest-cov nbmake cplex docplex pyomo
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        export SOLVER_INTERFACE="CBC"
        coverage run -a --source=eesrep -m pytest tests --tb=short -W ignore::DeprecationWarning
        export SOLVER_INTERFACE="DOCPLEX"
        coverage run -a --source=eesrep -m pytest tests --tb=short -W ignore::DeprecationWarning
        # export SOLVER_INTERFACE="PYOMO"
        # coverage run -a --source=eesrep -m pytest tests --tb=short -W ignore::DeprecationWarning
        coverage report
        pytest --nbmake tutorials
