# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6"] # , "3.7", "3.8", "3.9", "3.10", "3.11", "3.12"

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest mip pandas numpy matplotlib 
        python -m pip install .[test]
        python -m pip install coverage pytest-cov nbmake docplex cplex pyomo
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        export SOLVER_INTERFACE="CBC"
        pytest tests --cov=eesrep --tb=short -W ignore::DeprecationWarning
        export SOLVER_INTERFACE="DOCPLEX"
        pytest tests --cov=eesrep --tb=short -W ignore::DeprecationWarning
        export SOLVER_INTERFACE="PYOMO"
        pytest tests --cov=eesrep --tb=short -W ignore::DeprecationWarning
        pytest --nbmake tutorials
